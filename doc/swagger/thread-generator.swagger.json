{
  "swagger": "2.0",
  "info": {
    "title": "Thread art Generator API",
    "version": "0.0.1",
    "contact": {
      "name": "Damien Goehrig",
      "url": "github.com/Damione1/thread-art-generator",
      "email": "thread-art-generator@damiengoehrig.ca"
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints for authentication"
    },
    {
      "name": "Users",
      "description": "Endpoints for user management"
    },
    {
      "name": "Arts",
      "description": "Endpoints for art management"
    },
    {
      "name": "ArtGeneratorService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/arts:upload": {
      "post": {
        "summary": "Upload an art",
        "description": "Upload an art to the system.",
        "operationId": "ArtGeneratorService_UploadArt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbArt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": " (streaming inputs)",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUploadArtRequest"
            }
          }
        ],
        "tags": [
          "Arts"
        ]
      }
    },
    "/v1/sessions": {
      "post": {
        "summary": "Log in a user",
        "description": "Authenticate a user with their email and password and return an access token.",
        "operationId": "ArtGeneratorService_CreateSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateSessionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateSessionRequest"
            }
          }
        ],
        "tags": [
          "Authentication"
        ],
        "security": []
      }
    },
    "/v1/sessions/{refreshToken}": {
      "delete": {
        "summary": "Logout a user",
        "description": "Delete a user's session, effectively logging them out.",
        "operationId": "ArtGeneratorService_DeleteSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "refreshToken",
            "description": "RefreshToken is the refresh token of the session that needs to be deleted.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/tokens:refresh": {
      "post": {
        "summary": "Refresh a user's token",
        "description": "Refresh a user's authentication token.",
        "operationId": "ArtGeneratorService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbRefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "summary": "List all users",
        "description": "Retrieve a list of all users in the system.",
        "operationId": "ArtGeneratorService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageToken",
            "description": "PageToken is the token to retrieve the next page of results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "PageSize is the number of users to return in a single page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user in the system.",
        "operationId": "ArtGeneratorService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User is the user to be created.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUser",
              "required": [
                "user"
              ]
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users/{email}:resetPassword": {
      "post": {
        "summary": "Reset a user's password",
        "description": "Send a password reset email to a user's registered email address.",
        "operationId": "ArtGeneratorService_ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "description": "The email of the user who wants to reset the password.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtGeneratorServiceResetPasswordBody"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users/{email}:sendValidationEmail": {
      "post": {
        "summary": "Send a validation email",
        "description": "Ask the system to send a validation email to a user's registered email address.",
        "operationId": "ArtGeneratorService_SendValidationEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "description": "The email of the user who wants to validate the email.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtGeneratorServiceSendValidationEmailBody"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users/{email}:validateEmail": {
      "post": {
        "summary": "Validate a user's email",
        "description": "Enter a validation number received by email to validate a user's email address.",
        "operationId": "ArtGeneratorService_ValidateEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "description": "The email of the user who wants to validate the email.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtGeneratorServiceValidateEmailBody"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users/{name}": {
      "get": {
        "summary": "Get a user's information",
        "description": "Retrieve information for a specific user by their ID.",
        "operationId": "ArtGeneratorService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the unique identifier for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Remove a specific user from the system.",
        "operationId": "ArtGeneratorService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the unique identifier for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users/{user.name}": {
      "patch": {
        "summary": "Update a user's information",
        "description": "Modify the information of a specific user.",
        "operationId": "ArtGeneratorService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.name",
            "description": "Name is the unique identifier for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "User is the user to be updated.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "FirstName is the user's first name."
                },
                "lastName": {
                  "type": "string",
                  "description": "LastName is the user's last name."
                },
                "email": {
                  "type": "string",
                  "description": "Email is the user's email."
                },
                "password": {
                  "type": "string",
                  "description": "Password is the user's password."
                },
                "avatar": {
                  "type": "string",
                  "description": "Avatar is the user's avatar url."
                }
              },
              "title": "User is the user to be updated.",
              "required": [
                "firstName",
                "lastName",
                "email",
                "password",
                "avatar"
              ]
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/{art.name}": {
      "patch": {
        "summary": "Update a post's information",
        "description": "Modify the information of a specific art.",
        "operationId": "ArtGeneratorService_UpdateArt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbArt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "art.name",
            "description": "The name of the Art resource.\nFor example: \"arts/123\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/arts/[^/]+"
          },
          {
            "name": "art",
            "description": "The Art resource to update.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Title is the art's title."
                },
                "imageUrl": {
                  "type": "string",
                  "description": "ImageURL is the art's image URL."
                },
                "author": {
                  "type": "string",
                  "title": "The name of the User resource who is the author of the art.\nFor example: \"users/456\"",
                  "readOnly": true
                },
                "createTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "CreatedAt is the art's creation time. Output only.",
                  "readOnly": true
                },
                "updateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UpdatedAt is the art's last update time.",
                  "readOnly": true
                }
              },
              "title": "The Art resource to update.",
              "required": [
                "title"
              ]
            }
          }
        ],
        "tags": [
          "Arts"
        ]
      }
    },
    "/v1/{name}": {
      "get": {
        "summary": "Get a arts's information",
        "description": "Retrieve information for a specific art by its ID.",
        "operationId": "ArtGeneratorService_GetArt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbArt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the Art resource.\nFor example: \"users/{user}/arts/{art}\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "authors/[^/]+/arts/[^/]+"
          }
        ],
        "tags": [
          "Arts"
        ]
      },
      "delete": {
        "summary": "Delete an art",
        "description": "Remove a specific art from the system.",
        "operationId": "ArtGeneratorService_DeleteArt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the Art resource.\nFor example: \"arts/123\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/arts/[^/]+"
          }
        ],
        "tags": [
          "Arts"
        ]
      }
    },
    "/v1/{parent}/arts": {
      "get": {
        "summary": "List all arts",
        "description": "Retrieve a list of all arts in the system.",
        "operationId": "ArtGeneratorService_ListArts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbListArtsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent which owns the arts.\nFor example: \"users/456\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of arts to return. The service may return fewer than this value.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListArts` call.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Arts"
        ]
      },
      "post": {
        "summary": "Create a new art",
        "description": "Create a new art to the system.",
        "operationId": "ArtGeneratorService_CreateArt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbArt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent which owns the arts.\nFor example: \"users/456\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          },
          {
            "name": "art",
            "description": "The art to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbArt",
              "required": [
                "art"
              ]
            }
          }
        ],
        "tags": [
          "Arts"
        ]
      }
    }
  },
  "definitions": {
    "ArtGeneratorServiceResetPasswordBody": {
      "type": "object",
      "title": "reset password"
    },
    "ArtGeneratorServiceSendValidationEmailBody": {
      "type": "object"
    },
    "ArtGeneratorServiceValidateEmailBody": {
      "type": "object",
      "properties": {
        "validationNumber": {
          "type": "string",
          "format": "int64",
          "description": "The validation number that the user needs to input."
        }
      },
      "title": "validate email",
      "required": [
        "validationNumber"
      ]
    },
    "pbArt": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the Art resource.\nFor example: \"arts/123\"",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Title is the art's title."
        },
        "imageUrl": {
          "type": "string",
          "description": "ImageURL is the art's image URL."
        },
        "author": {
          "type": "string",
          "title": "The name of the User resource who is the author of the art.\nFor example: \"users/456\"",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "CreatedAt is the art's creation time. Output only.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "UpdatedAt is the art's last update time.",
          "readOnly": true
        }
      },
      "required": [
        "title"
      ]
    },
    "pbCreateSessionRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email is the user's email."
        },
        "password": {
          "type": "string",
          "description": "Password is the user's password."
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "pbCreateSessionResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser",
          "description": "User is the user.",
          "readOnly": true
        },
        "sessionId": {
          "type": "string",
          "title": "Session ID",
          "readOnly": true
        },
        "accessToken": {
          "type": "string",
          "description": "AccessToken is the access token.",
          "readOnly": true
        },
        "refreshToken": {
          "type": "string",
          "description": "RefreshToken is the refresh token.",
          "readOnly": true
        },
        "accessTokenExpireTime": {
          "type": "string",
          "format": "date-time",
          "description": "AccessTokenExpiresTime is the access token expiration time.",
          "readOnly": true
        },
        "refreshTokenExpireTime": {
          "type": "string",
          "format": "date-time",
          "description": "RefreshTokenExpiresTime is the refresh token expiration time.",
          "readOnly": true
        }
      }
    },
    "pbListArtsResponse": {
      "type": "object",
      "properties": {
        "arts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbArt"
          },
          "description": "The arts returned."
        },
        "nextPageToken": {
          "type": "integer",
          "format": "int32",
          "description": "A token to retrieve next page of results.\nPass this value in ListArtsRequest.page_token field in the subsequent call to `ListArts` method to retrieve the next page of results."
        }
      }
    },
    "pbListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbUser"
          },
          "description": "Users is the list of users."
        },
        "nextPageToken": {
          "type": "string",
          "description": "NextPageToken is the token to retrieve the next page of results."
        }
      }
    },
    "pbRefreshTokenRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "RefreshToken is the refresh token that the user provides."
        }
      },
      "required": [
        "refreshToken"
      ]
    },
    "pbRefreshTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "AccessToken is the new access token that the user can use for authentication.",
          "readOnly": true
        },
        "refreshToken": {
          "type": "string",
          "description": "RefreshToken is the new refresh token that the user can use to get a new access token when the current one expires.",
          "readOnly": true
        },
        "accessTokenExpireTime": {
          "type": "string",
          "format": "date-time",
          "description": "AccessTokenExpiresTime is the access token expiration time.",
          "readOnly": true
        },
        "refreshTokenExpireTime": {
          "type": "string",
          "format": "date-time",
          "description": "RefreshTokenExpiresTime is the refresh token expiration time.",
          "readOnly": true
        }
      }
    },
    "pbUploadArtRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the Art resource.\nFor example: \"users/{user}/arts/{art}\""
        },
        "data": {
          "type": "string",
          "format": "byte",
          "title": "The data of the art"
        },
        "mimeType": {
          "type": "string",
          "title": "The mime type of the uploaded file"
        }
      }
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the unique identifier for the user.",
          "readOnly": true
        },
        "firstName": {
          "type": "string",
          "description": "FirstName is the user's first name."
        },
        "lastName": {
          "type": "string",
          "description": "LastName is the user's last name."
        },
        "email": {
          "type": "string",
          "description": "Email is the user's email."
        },
        "password": {
          "type": "string",
          "description": "Password is the user's password."
        },
        "avatar": {
          "type": "string",
          "description": "Avatar is the user's avatar url."
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email",
        "password",
        "avatar"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Access token obtained from the login endpoint. Bearer authentication should be used with the format: 'Bearer {access_token}'.",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
