{
  "swagger": "2.0",
  "info": {
    "title": "Thread art Generator API",
    "version": "0.0.1",
    "contact": {
      "name": "Damien Goehrig",
      "url": "github.com/Damione1/thread-art-generator",
      "email": "thread-art-generator@damiengoehrig.ca"
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints for authentication"
    },
    {
      "name": "Users",
      "description": "Endpoints for user management"
    },
    {
      "name": "Arts",
      "description": "Endpoints for art management"
    },
    {
      "name": "Media",
      "description": "Endpoints for media management"
    },
    {
      "name": "ArtGeneratorService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/users": {
      "get": {
        "summary": "List all users",
        "description": "Retrieve a list of all users in the system.",
        "operationId": "ArtGeneratorService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageToken",
            "description": "PageToken is the token to retrieve the next page of results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "PageSize is the number of users to return in a single page.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user in the system.",
        "operationId": "ArtGeneratorService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "User is the user to be created.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUser",
              "required": [
                "user"
              ]
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users/{name}": {
      "get": {
        "summary": "Get a user's information",
        "description": "Retrieve information for a specific user by their ID.",
        "operationId": "ArtGeneratorService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the unique identifier for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Remove a specific user from the system.",
        "operationId": "ArtGeneratorService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is the unique identifier for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users/{user.name}": {
      "patch": {
        "summary": "Update a user's information",
        "description": "Modify the information of a specific user.",
        "operationId": "ArtGeneratorService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.name",
            "description": "Name is the unique identifier for the user.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "description": "User is the user to be updated.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "FirstName is the user's first name."
                },
                "lastName": {
                  "type": "string",
                  "description": "LastName is the user's last name."
                },
                "email": {
                  "type": "string",
                  "description": "Email is the user's email."
                },
                "avatar": {
                  "type": "string",
                  "description": "Avatar is the user's avatar url."
                }
              },
              "title": "User is the user to be updated.",
              "required": [
                "firstName",
                "lastName",
                "email",
                "avatar",
                "user"
              ]
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/{art.name}": {
      "patch": {
        "summary": "Update a post's information",
        "description": "Modify the information of a specific art.",
        "operationId": "ArtGeneratorService_UpdateArt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbArt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "art.name",
            "description": "The name of the Art resource.\nFor example: \"arts/123\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/arts/[^/]+"
          },
          {
            "name": "art",
            "description": "The Art resource to update.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Title is the art's title."
                },
                "imageUrl": {
                  "type": "string",
                  "description": "ImageURL is the art's image URL."
                },
                "author": {
                  "type": "string",
                  "title": "The name of the User resource who is the author of the art.\nFor example: \"users/456\"",
                  "readOnly": true
                },
                "createTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "CreatedAt is the art's creation time. Output only.",
                  "readOnly": true
                },
                "updateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "UpdatedAt is the art's last update time.",
                  "readOnly": true
                }
              },
              "title": "The Art resource to update.",
              "required": [
                "title",
                "art"
              ]
            }
          }
        ],
        "tags": [
          "Arts"
        ]
      }
    },
    "/v1/{name}": {
      "get": {
        "summary": "Get a arts's information",
        "description": "Retrieve information for a specific art by its ID.",
        "operationId": "ArtGeneratorService_GetArt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbArt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the Art resource.\nFor example: \"users/{user}/arts/{art}\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "authors/[^/]+/arts/[^/]+"
          }
        ],
        "tags": [
          "Arts"
        ]
      },
      "delete": {
        "summary": "Delete an art",
        "description": "Remove a specific art from the system.",
        "operationId": "ArtGeneratorService_DeleteArt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the Art resource.\nFor example: \"arts/123\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/arts/[^/]+"
          }
        ],
        "tags": [
          "Arts"
        ]
      }
    },
    "/v1/{parent}/arts": {
      "get": {
        "summary": "List all arts",
        "description": "Retrieve a list of all arts in the system.",
        "operationId": "ArtGeneratorService_ListArts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbListArtsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent which owns the arts.\nFor example: \"users/456\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of arts to return. The service may return fewer than this value.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListArts` call.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Arts"
        ]
      },
      "post": {
        "summary": "Create a new art",
        "description": "Create a new art to the system.",
        "operationId": "ArtGeneratorService_CreateArt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbArt"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parent",
            "description": "The parent which owns the arts.\nFor example: \"users/456\"",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          },
          {
            "name": "art",
            "description": "The art to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbArt",
              "required": [
                "art"
              ]
            }
          }
        ],
        "tags": [
          "Arts"
        ]
      }
    }
  },
  "definitions": {
    "pbArt": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the Art resource.\nFor example: \"arts/123\"",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "Title is the art's title."
        },
        "imageUrl": {
          "type": "string",
          "description": "ImageURL is the art's image URL."
        },
        "author": {
          "type": "string",
          "title": "The name of the User resource who is the author of the art.\nFor example: \"users/456\"",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "CreatedAt is the art's creation time. Output only.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "UpdatedAt is the art's last update time.",
          "readOnly": true
        }
      },
      "required": [
        "title"
      ]
    },
    "pbListArtsResponse": {
      "type": "object",
      "properties": {
        "arts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbArt"
          },
          "description": "The arts returned."
        },
        "nextPageToken": {
          "type": "integer",
          "format": "int32",
          "description": "A token to retrieve next page of results.\nPass this value in ListArtsRequest.page_token field in the subsequent call to `ListArts` method to retrieve the next page of results."
        }
      }
    },
    "pbListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbUser"
          },
          "description": "Users is the list of users."
        },
        "nextPageToken": {
          "type": "string",
          "description": "NextPageToken is the token to retrieve the next page of results."
        }
      }
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the unique identifier for the user.",
          "readOnly": true
        },
        "firstName": {
          "type": "string",
          "description": "FirstName is the user's first name."
        },
        "lastName": {
          "type": "string",
          "description": "LastName is the user's last name."
        },
        "email": {
          "type": "string",
          "description": "Email is the user's email."
        },
        "avatar": {
          "type": "string",
          "description": "Avatar is the user's avatar url."
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email",
        "avatar"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Access token obtained from the login endpoint. Bearer authentication should be used with the format: 'Bearer {access_token}'.",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
