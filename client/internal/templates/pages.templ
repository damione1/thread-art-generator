package templates

import (
	"github.com/Damione1/thread-art-generator/client/internal/auth"
	"github.com/Damione1/thread-art-generator/core/pb"
)

// HomePage renders the public home page
templ HomePage(user *auth.UserInfo) {
	@Layout("ThreadArt - Create Beautiful Thread Art", user) {
		<!-- Hero Section -->
		<section class="relative overflow-hidden py-20">
			<!-- Removed the background pulse animation from here since it's now global -->
			<div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
				<div class="flex flex-col lg:flex-row items-center gap-12">
					<div class="w-full lg:w-1/2 text-center lg:text-left">
						<h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 leading-tight">
							Transform Images into Stunning{ " " }
							<span class="bg-gradient-to-r from-primary-400 to-accent-purple bg-clip-text text-transparent">
								Thread Art
							</span>
						</h1>
						<p class="text-xl text-slate-300 mb-8 max-w-2xl">
							Our algorithm converts your photos into beautiful thread
							patterns that can be created on a circular frame with just a
							single thread.
						</p>
						<div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
							if user != nil {
								<a
									href="/dashboard"
									class="px-8 py-3 rounded-md bg-primary-600 text-white hover:bg-primary-500 transition duration-300 text-lg font-medium shadow-lg hover:shadow-xl shadow-primary-900/30 transform hover:-translate-y-1"
								>
									Dashboard
								</a>
							} else {
								<a
									href="/auth/login"
									class="px-8 py-3 rounded-md bg-primary-600 text-white hover:bg-primary-500 transition duration-300 text-lg font-medium shadow-lg hover:shadow-xl shadow-primary-900/30 transform hover:-translate-y-1"
								>
									Get Started
								</a>
							}
							<a
								href="/gallery"
								class="px-8 py-3 rounded-md border border-slate-700 text-slate-200 hover:bg-dark-300/60 hover:border-primary-600/50 transition duration-300 text-lg font-medium transform hover:-translate-y-1"
							>
								View Gallery
							</a>
						</div>
					</div>
					<div class="w-full lg:w-1/2">
						<div class="relative h-[400px] lg:h-[500px] w-full rounded-2xl overflow-hidden shadow-2xl shadow-primary-900/30 border border-dark-300/50 backdrop-blur-sm">
							<!-- Thread art preview with improved visualization -->
							<div class="absolute inset-0 bg-gradient-to-br from-dark-400/80 to-dark-500/80 flex items-center justify-center">
								<div class="w-[85%] h-[85%] rounded-full border-2 border-primary-500/30 relative overflow-hidden shadow-inner shadow-primary-900/50">
									<!-- Simulated thread pattern -->
									<div class="absolute inset-0 flex items-center justify-center">
										<div
											class="absolute inset-0 opacity-80"
											style="background-image: radial-gradient(circle at center, transparent 30%, rgba(30, 30, 40, 0.3) 70%), repeating-conic-gradient(from 0deg, rgba(90, 127, 255, 0) 0deg, rgba(90, 127, 255, 0.1) 1deg, rgba(90, 127, 255, 0.3) 2deg, rgba(90, 127, 255, 0.1) 3deg, rgba(90, 127, 255, 0) 4deg);"
										></div>
										<div
											class="absolute inset-0"
											style="background: radial-gradient(circle at center, transparent 50%, transparent 56%), conic-gradient(from 45deg, rgba(90, 127, 255, 0) 0%, rgba(147, 51, 234, 0.2) 25%, rgba(90, 127, 255, 0.4) 50%, rgba(147, 51, 234, 0.2) 75%, rgba(90, 127, 255, 0) 100%)"
										></div>
										<!-- Center point -->
										<div class="h-4 w-4 rounded-full bg-primary-500/80 shadow-lg shadow-primary-500/30 z-10"></div>
									</div>
								</div>
							</div>
							<!-- Visual elements -->
							<div class="absolute top-6 right-6 h-20 w-20 rounded-full border border-primary-500/20 flex items-center justify-center">
								<div class="h-12 w-12 rounded-full border-2 border-primary-400/40 animate-spin-slow"></div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
	}
}

// DashboardWithSort renders the dashboard with sort controls
templ Dashboard(user *auth.UserInfo, arts []*pb.Art, sort, dir string) {
	@Layout("Dashboard - ThreadArt", user) {
		<div class="space-y-8">
			<div class="flex items-center justify-between">
				<h1 class="text-3xl font-bold text-slate-100">Your Dashboard</h1>
				<div class="flex space-x-2">
					<button class="px-4 py-2 bg-dark-300 hover:bg-dark-200 rounded-lg text-sm font-medium text-slate-300 flex items-center gap-2 transition duration-300 border border-dark-400">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"></path>
						</svg>
						Filter
					</button>
					if dir == "asc" {
						<a href="/dashboard?sort=create_time&dir=desc" class="px-4 py-2 bg-dark-300 hover:bg-dark-200 rounded-lg text-sm font-medium flex items-center gap-2 transition duration-300 border border-dark-400 text-slate-300">
							<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12"></path>
							</svg>
							Sort ▼
						</a>
					} else {
						<a href="/dashboard?sort=create_time&dir=asc" class="px-4 py-2 bg-dark-300 hover:bg-dark-200 rounded-lg text-sm font-medium flex items-center gap-2 transition duration-300 border border-dark-400 text-slate-300">
							<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12"></path>
							</svg>
							Sort ▲
						</a>
					}
				</div>
			</div>
			if user != nil {
				<div class="bg-gradient-to-r from-dark-300 to-dark-400 p-6 rounded-xl shadow-lg mb-8 border border-dark-300/80 backdrop-blur-sm">
					<div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
						<div>
							<h2 class="text-xl font-semibold text-primary-400 mb-2">Welcome, { user.Name }!</h2>
							<p class="text-slate-300">Manage your thread art projects and creations from this dashboard.</p>
						</div>
						<a href="/dashboard/arts/new" class="px-5 py-2.5 bg-primary-600 hover:bg-primary-500 text-white rounded-lg shadow-lg shadow-primary-900/20 transition duration-300 text-center text-sm font-medium flex items-center justify-center gap-2 whitespace-nowrap">
							<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
							</svg>
							New Project
						</a>
					</div>
				</div>
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
					<!-- Create new art card -->
					<div class="group bg-gradient-to-br from-dark-300 to-dark-400 p-6 rounded-xl shadow-lg flex flex-col items-center justify-center border border-dark-300/80 h-72 hover:border-primary-600/50 transition-all duration-300 transform hover:-translate-y-1 hover:shadow-xl relative overflow-hidden">
						<!-- Background effect -->
						<div class="absolute inset-0 bg-gradient-to-br from-primary-600/5 to-primary-900/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
						<div class="relative z-10 flex flex-col items-center">
							<div class="w-16 h-16 rounded-full bg-dark-200 flex items-center justify-center mb-4 group-hover:bg-primary-900/30 transition-colors duration-300">
								<svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-primary-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
								</svg>
							</div>
							<h3 class="text-xl font-medium text-slate-100 mb-2">Create New Art</h3>
							<p class="text-slate-400 text-center mb-6">Upload an image to start a new thread art project</p>
							<a href="/dashboard/arts/new" class="px-6 py-2.5 bg-primary-600 text-white rounded-lg hover:bg-primary-500 transition-colors duration-300 shadow-lg shadow-primary-900/20">Get Started</a>
						</div>
					</div>
					<!-- Display user's arts -->
					for _, art := range arts {
						<div class="bg-gradient-to-br from-dark-300 to-dark-400 rounded-xl shadow-lg border border-dark-300/80 overflow-hidden group hover:border-primary-600/50 transition-all duration-300 transform hover:-translate-y-1 hover:shadow-xl h-72">
							<div class="h-2/3 bg-dark-500 relative">
								if art.GetImageUrl() != "" {
									<img
										src={ art.GetImageUrl() }
										alt={ art.GetTitle() }
										class="w-full h-full object-cover"
									/>
								} else {
									<!-- Placeholder for project without image -->
									<div class="absolute inset-0 flex items-center justify-center bg-gradient-to-br from-dark-400 to-dark-500">
										<div class="w-36 h-36 rounded-full border border-primary-500/30 relative overflow-hidden">
											<div
												class="absolute inset-0"
												style="background: repeating-radial-gradient(circle at center, transparent 20px, rgba(90, 127, 255, 0.1) 30px, transparent 40px)"
											></div>
										</div>
									</div>
								}
								<div class="absolute top-2 right-2 bg-dark-200/80 text-primary-400 text-xs font-medium px-2 py-1 rounded">
									{ string(art.GetStatus()) }
								</div>
							</div>
							<div class="p-4">
								<h3 class="font-medium text-slate-200 truncate">{ art.GetTitle() }</h3>
								if art.GetCreateTime() != nil {
									<p class="text-sm text-slate-400 mb-2">
										Created { art.GetCreateTime().AsTime().Format("Jan 2, 2006") }
									</p>
								}
							</div>
						</div>
					}
					<!-- Show "No projects" message if the user has no arts (other than the "Create New Art" card) -->
					if len(arts) == 0 {
						<div class="bg-gradient-to-br from-dark-300 to-dark-400 rounded-xl shadow-lg border border-dark-300/80 overflow-hidden group h-72 flex items-center justify-center">
							<div class="text-center p-6">
								<svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-slate-500 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
								</svg>
								<h3 class="text-xl font-medium text-slate-300 mb-2">No projects yet</h3>
								<p class="text-slate-400 mb-4">Create your first thread art project to get started</p>
							</div>
						</div>
					}
				</div>
			} else {
				<div class="bg-gradient-to-br from-dark-300 to-dark-400 p-8 rounded-xl shadow-lg border border-dark-300/80 flex flex-col items-center justify-center text-center">
					<div class="w-16 h-16 rounded-full bg-dark-200 flex items-center justify-center mb-4">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-primary-500/70" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
						</svg>
					</div>
					<h2 class="text-xl font-semibold text-slate-100 mb-4">Account Required</h2>
					<p class="text-slate-300 max-w-md mb-6">Please log in or create an account to access your personal dashboard and start creating thread art.</p>
					<div class="flex gap-4">
						<a href="/auth/login" class="px-6 py-2.5 bg-primary-600 text-white rounded-lg hover:bg-primary-500 transition-colors duration-300 shadow-lg shadow-primary-900/20">Log In</a>
						<a href="/auth/signup" class="px-6 py-2.5 border border-slate-700 text-slate-200 rounded-lg hover:bg-dark-300/60 hover:border-primary-600/50 transition-colors duration-300">Sign Up</a>
					</div>
				</div>
			}
		</div>
	}
}
