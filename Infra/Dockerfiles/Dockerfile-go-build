# Build stage for service 1
FROM golang:1.24 AS builder1
WORKDIR /app/api
COPY go.mod go.sum ./
RUN go mod download
COPY ./api/ .
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o cmd/api/main .

# Build stage for service 2
FROM golang:1.24 AS builder2
WORKDIR /app/migrations
COPY ./migrations/go.mod ./migrations/go.sum ./
RUN go mod download
COPY ./migrations/ .
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o cmd/migrations/main .

# Proto generation stage
FROM node:20-slim AS proto-gen
WORKDIR /app

# Install protoc and required plugins
RUN apt-get update && apt-get install -y protobuf-compiler

# Copy web package.json first to use its dependencies
COPY ./web/package.json ./web/package-lock.json* ./web/
WORKDIR /app/web
# Install dependencies from web's package.json
RUN npm ci

# Copy proto files and scripts
WORKDIR /app
COPY ./proto/ ./proto/
COPY ./scripts/ ./scripts/
COPY ./core/ ./core/

# Make the script executable
RUN chmod +x /app/scripts/build-protos.sh

# Run the proto generation script
RUN /app/scripts/build-protos.sh

# Final stage to combine all artifacts
FROM scratch AS final
WORKDIR /app

# Copy service binaries
COPY --from=builder1 /app/api/cmd/api/main /app/cmd/api/main
COPY --from=builder2 /app/migrations/cmd/migrations/main /app/cmd/migrations/main

# Copy generated proto files
COPY --from=proto-gen /app/core/pb /app/core/pb
COPY --from=proto-gen /app/web/src/lib/pb /app/web/src/lib/pb
