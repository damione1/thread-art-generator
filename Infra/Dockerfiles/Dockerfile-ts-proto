FROM node:latest

# Set the working directory
WORKDIR /app

# Install global dependencies to ensure they're in PATH
RUN npm install -g \
    @bufbuild/buf \
    @bufbuild/protoc-gen-es \
    @connectrpc/protoc-gen-connect-es \
    @bufbuild/connect \
    @bufbuild/connect-web \
    @bufbuild/protobuf

# Verify the plugins are available
RUN which protoc-gen-es && \
    which protoc-gen-connect-es

# Install protoc
RUN apt-get update && apt-get install -y unzip curl && \
    PROTOC_VERSION=$(curl -s https://api.github.com/repos/protocolbuffers/protobuf/releases/latest | \
    grep -o '"tag_name": "v[0-9.]*"' | cut -d'"' -f4 | sed 's/v//') && \
    echo "Installing protoc version: ${PROTOC_VERSION}" && \
    PROTOC_ZIP=protoc-${PROTOC_VERSION}-linux-x86_64.zip && \
    curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/${PROTOC_ZIP} && \
    unzip -o ${PROTOC_ZIP} -d /usr/local bin/protoc && \
    unzip -o ${PROTOC_ZIP} -d /usr/local 'include/*' && \
    rm -f ${PROTOC_ZIP} && \
    protoc --version

# Create the output directory
RUN mkdir -p /app/web/src/lib/pb

# We'll mount the project directory at runtime

# Create a custom entrypoint script
RUN echo '#!/bin/bash' > /entrypoint.sh && \
    echo 'echo "Generating NextJS gRPC client code..."' >> /entrypoint.sh && \
    echo 'rm -rf /app/web/src/lib/pb/*' >> /entrypoint.sh && \
    echo 'mkdir -p /app/web/src/lib/pb' >> /entrypoint.sh && \
    echo 'protoc \\' >> /entrypoint.sh && \
    echo '  --es_out=/app/web/src/lib/pb \\' >> /entrypoint.sh && \
    echo '  --es_opt=target=ts \\' >> /entrypoint.sh && \
    echo '  --connect-es_out=/app/web/src/lib/pb \\' >> /entrypoint.sh && \
    echo '  --connect-es_opt=target=ts \\' >> /entrypoint.sh && \
    echo '  --proto_path=/app/proto \\' >> /entrypoint.sh && \
    echo '  /app/proto/*.proto' >> /entrypoint.sh && \
    echo 'echo "Web client code generation complete!"' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/entrypoint.sh"]
