// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: art.proto

package pb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Art) Validate() error {
	if this.CreateTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreateTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreateTime", err)
		}
	}
	if this.UpdateTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdateTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdateTime", err)
		}
	}
	return nil
}
func (this *CreateArtRequest) Validate() error {
	if this.Art != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Art); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Art", err)
		}
	}
	return nil
}
func (this *UpdateArtRequest) Validate() error {
	if this.Art != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Art); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Art", err)
		}
	}
	if this.UpdateMask != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdateMask); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdateMask", err)
		}
	}
	return nil
}
func (this *GetArtRequest) Validate() error {
	return nil
}
func (this *ListArtsRequest) Validate() error {
	return nil
}
func (this *ListArtsResponse) Validate() error {
	for _, item := range this.Arts {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Arts", err)
			}
		}
	}
	return nil
}
func (this *DeleteArtRequest) Validate() error {
	return nil
}
