// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: art.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status of the art
type ArtStatus int32

const (
	// Default unspecified status
	ArtStatus_ART_STATUS_UNSPECIFIED ArtStatus = 0
	// Art is created but image is pending upload
	ArtStatus_ART_STATUS_PENDING_IMAGE ArtStatus = 1
	// Image is uploaded and being processed
	ArtStatus_ART_STATUS_PROCESSING ArtStatus = 2
	// Art is complete with processed image
	ArtStatus_ART_STATUS_COMPLETE ArtStatus = 3
	// Processing failed
	ArtStatus_ART_STATUS_FAILED ArtStatus = 4
	// Art is archived/hidden but not deleted
	ArtStatus_ART_STATUS_ARCHIVED ArtStatus = 5
)

// Enum value maps for ArtStatus.
var (
	ArtStatus_name = map[int32]string{
		0: "ART_STATUS_UNSPECIFIED",
		1: "ART_STATUS_PENDING_IMAGE",
		2: "ART_STATUS_PROCESSING",
		3: "ART_STATUS_COMPLETE",
		4: "ART_STATUS_FAILED",
		5: "ART_STATUS_ARCHIVED",
	}
	ArtStatus_value = map[string]int32{
		"ART_STATUS_UNSPECIFIED":   0,
		"ART_STATUS_PENDING_IMAGE": 1,
		"ART_STATUS_PROCESSING":    2,
		"ART_STATUS_COMPLETE":      3,
		"ART_STATUS_FAILED":        4,
		"ART_STATUS_ARCHIVED":      5,
	}
)

func (x ArtStatus) Enum() *ArtStatus {
	p := new(ArtStatus)
	*p = x
	return p
}

func (x ArtStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_art_proto_enumTypes[0].Descriptor()
}

func (ArtStatus) Type() protoreflect.EnumType {
	return &file_art_proto_enumTypes[0]
}

func (x ArtStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtStatus.Descriptor instead.
func (ArtStatus) EnumDescriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{0}
}

type Art struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the Art resource.
	// For example: "users/123/arts/456"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Title is the art's title.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// ImageURL is the art's image URL.
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// Status of the art
	Status ArtStatus `protobuf:"varint,4,opt,name=status,proto3,enum=pb.ArtStatus" json:"status,omitempty"`
	// The name of the User resource who is the author of the art.
	// For example: "users/456"
	Author string `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	// CreatedAt is the art's creation time. Output only.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// UpdatedAt is the art's last update time.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Art) Reset() {
	*x = Art{}
	mi := &file_art_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Art) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Art) ProtoMessage() {}

func (x *Art) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Art.ProtoReflect.Descriptor instead.
func (*Art) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{0}
}

func (x *Art) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Art) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Art) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Art) GetStatus() ArtStatus {
	if x != nil {
		return x.Status
	}
	return ArtStatus_ART_STATUS_UNSPECIFIED
}

func (x *Art) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Art) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Art) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type CreateArtRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The parent which owns the arts.
	// For example: "users/456"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The art to create.
	Art           *Art `protobuf:"bytes,2,opt,name=art,proto3" json:"art,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateArtRequest) Reset() {
	*x = CreateArtRequest{}
	mi := &file_art_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateArtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArtRequest) ProtoMessage() {}

func (x *CreateArtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArtRequest.ProtoReflect.Descriptor instead.
func (*CreateArtRequest) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{1}
}

func (x *CreateArtRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateArtRequest) GetArt() *Art {
	if x != nil {
		return x.Art
	}
	return nil
}

type UpdateArtRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Art resource to update.
	Art *Art `protobuf:"bytes,1,opt,name=art,proto3" json:"art,omitempty"`
	// The update mask applies to the resource.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateArtRequest) Reset() {
	*x = UpdateArtRequest{}
	mi := &file_art_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateArtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArtRequest) ProtoMessage() {}

func (x *UpdateArtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArtRequest.ProtoReflect.Descriptor instead.
func (*UpdateArtRequest) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateArtRequest) GetArt() *Art {
	if x != nil {
		return x.Art
	}
	return nil
}

func (x *UpdateArtRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type GetArtRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the Art resource.
	// For example: "users/{user}/arts/{art}"
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtRequest) Reset() {
	*x = GetArtRequest{}
	mi := &file_art_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtRequest) ProtoMessage() {}

func (x *GetArtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtRequest.ProtoReflect.Descriptor instead.
func (*GetArtRequest) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{3}
}

func (x *GetArtRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListArtsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The parent which owns the arts.
	// For example: "users/456"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of arts to return. The service may return fewer than this value.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListArts` call.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArtsRequest) Reset() {
	*x = ListArtsRequest{}
	mi := &file_art_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArtsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtsRequest) ProtoMessage() {}

func (x *ListArtsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtsRequest.ProtoReflect.Descriptor instead.
func (*ListArtsRequest) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{4}
}

func (x *ListArtsRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ListArtsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListArtsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListArtsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The arts returned.
	Arts []*Art `protobuf:"bytes,1,rep,name=arts,proto3" json:"arts,omitempty"`
	// A token to retrieve next page of results.
	// Pass this value in ListArtsRequest.page_token field in the subsequent call to `ListArts` method to retrieve the next page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArtsResponse) Reset() {
	*x = ListArtsResponse{}
	mi := &file_art_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArtsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArtsResponse) ProtoMessage() {}

func (x *ListArtsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArtsResponse.ProtoReflect.Descriptor instead.
func (*ListArtsResponse) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{5}
}

func (x *ListArtsResponse) GetArts() []*Art {
	if x != nil {
		return x.Arts
	}
	return nil
}

func (x *ListArtsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteArtRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the Art resource.
	// For example: "users/123/arts/456"
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteArtRequest) Reset() {
	*x = DeleteArtRequest{}
	mi := &file_art_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteArtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArtRequest) ProtoMessage() {}

func (x *DeleteArtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArtRequest.ProtoReflect.Descriptor instead.
func (*DeleteArtRequest) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteArtRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetArtUploadUrlRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the Art resource to upload an image for.
	// For example: "users/123/arts/456"
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArtUploadUrlRequest) Reset() {
	*x = GetArtUploadUrlRequest{}
	mi := &file_art_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtUploadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtUploadUrlRequest) ProtoMessage() {}

func (x *GetArtUploadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtUploadUrlRequest.ProtoReflect.Descriptor instead.
func (*GetArtUploadUrlRequest) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{7}
}

func (x *GetArtUploadUrlRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetArtUploadUrlResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The signed URL to upload the art image to
	UploadUrl string `protobuf:"bytes,1,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
	// The expiration time for the signed URL
	ExpirationTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetArtUploadUrlResponse) Reset() {
	*x = GetArtUploadUrlResponse{}
	mi := &file_art_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArtUploadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtUploadUrlResponse) ProtoMessage() {}

func (x *GetArtUploadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtUploadUrlResponse.ProtoReflect.Descriptor instead.
func (*GetArtUploadUrlResponse) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{8}
}

func (x *GetArtUploadUrlResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *GetArtUploadUrlResponse) GetExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationTime
	}
	return nil
}

type ConfirmArtImageUploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the Art resource that has been uploaded.
	// For example: "users/123/arts/456"
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmArtImageUploadRequest) Reset() {
	*x = ConfirmArtImageUploadRequest{}
	mi := &file_art_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmArtImageUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmArtImageUploadRequest) ProtoMessage() {}

func (x *ConfirmArtImageUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_art_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmArtImageUploadRequest.ProtoReflect.Descriptor instead.
func (*ConfirmArtImageUploadRequest) Descriptor() ([]byte, []int) {
	return file_art_proto_rawDescGZIP(), []int{9}
}

func (x *ConfirmArtImageUploadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_art_proto protoreflect.FileDescriptor

const file_art_proto_rawDesc = "" +
	"\n" +
	"\tart.proto\x12\x02pb\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1bbuf/validate/validate.proto\"\xd1\x04\n" +
	"\x03Art\x120\n" +
	"\x04name\x18\x01 \x01(\tB\x1c\xe2A\x01\x03\xfaA\x15\n" +
	"\x13art.example.com/ArtR\x04name\x12X\n" +
	"\x05title\x18\x02 \x01(\tBB\xe2A\x01\x02\xbaH;\xba\x018\n" +
	"\x12art.title.required\x12\x11Title is required\x1a\x0fthis.size() > 0R\x05title\x12\xa0\x01\n" +
	"\timage_url\x18\x03 \x01(\tB\x82\x01\xe2A\x01\x03\xbaH{\xba\x01x\n" +
	"\x1eart.image_url.uri_when_present\x12*Image URL must be a valid URI when present\x1a*this == '' || this.matches('^https?://.+')R\bimageUrl\x12+\n" +
	"\x06status\x18\x04 \x01(\x0e2\r.pb.ArtStatusB\x04\xe2A\x01\x03R\x06status\x125\n" +
	"\x06author\x18\x05 \x01(\tB\x1d\xe2A\x01\x03\xfaA\x16\n" +
	"\x14art.example.com/UserR\x06author\x12A\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x04\xe2A\x01\x03R\n" +
	"createTime\x12A\n" +
	"\vupdate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x04\xe2A\x01\x03R\n" +
	"updateTime:1\xeaA.\n" +
	"\x13art.example.com/Art\x12\x17users/{user}/arts/{art}\"\xfb\x01\n" +
	"\x10CreateArtRequest\x12\xbf\x01\n" +
	"\x06parent\x18\x01 \x01(\tB\xa6\x01\xe2A\x01\x02\xfaA\x16\n" +
	"\x14art.example.com/User\xbaH\x85\x01\xba\x01\x81\x01\n" +
	"\x14get_user.name.format\x12;User resource name is required and must start with 'users/'\x1a,this.size() > 0 && this.startsWith('users/')R\x06parent\x12%\n" +
	"\x03art\x18\x02 \x01(\v2\a.pb.ArtB\n" +
	"\xe2A\x01\x02\xbaH\x03\xc8\x01\x01R\x03art\"~\n" +
	"\x10UpdateArtRequest\x12%\n" +
	"\x03art\x18\x01 \x01(\v2\a.pb.ArtB\n" +
	"\xe2A\x01\x02\xbaH\x03\xc8\x01\x01R\x03art\x12C\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"updateMask\"\xe5\x01\n" +
	"\rGetArtRequest\x12\xd3\x01\n" +
	"\x04name\x18\x01 \x01(\tB\xbe\x01\xe2A\x01\x02\xfaA\x15\n" +
	"\x13art.example.com/Art\xbaH\x9e\x01\xba\x01\x9a\x01\n" +
	"\x13get_art.name.format\x12FArt resource name is required and must follow pattern 'users/*/arts/*'\x1a;this.size() > 0 && this.matches('^users/[^/]+/arts/[^/]+$')R\x04name\"\x9f\x02\n" +
	"\x0fListArtsRequest\x12\xc4\x01\n" +
	"\x06parent\x18\x01 \x01(\tB\xab\x01\xe2A\x01\x02\xfaA\x16\n" +
	"\x14art.example.com/User\xbaH\x8a\x01\xba\x01\x86\x01\n" +
	"\x17list_arts.parent.format\x12=Parent resource name is required and must start with 'users/'\x1a,this.size() > 0 && this.startsWith('users/')R\x06parent\x12&\n" +
	"\tpage_size\x18\x02 \x01(\x05B\t\xbaH\x06\x1a\x04\x18d \x00R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"W\n" +
	"\x10ListArtsResponse\x12\x1b\n" +
	"\x04arts\x18\x01 \x03(\v2\a.pb.ArtR\x04arts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xeb\x01\n" +
	"\x10DeleteArtRequest\x12\xd6\x01\n" +
	"\x04name\x18\x01 \x01(\tB\xc1\x01\xe2A\x01\x02\xfaA\x15\n" +
	"\x13art.example.com/Art\xbaH\xa1\x01\xba\x01\x9d\x01\n" +
	"\x16delete_art.name.format\x12FArt resource name is required and must follow pattern 'users/*/arts/*'\x1a;this.size() > 0 && this.matches('^users/[^/]+/arts/[^/]+$')R\x04name\"\xf9\x01\n" +
	"\x16GetArtUploadUrlRequest\x12\xde\x01\n" +
	"\x04name\x18\x01 \x01(\tB\xc9\x01\xe2A\x01\x02\xfaA\x15\n" +
	"\x13art.example.com/Art\xbaH\xa9\x01\xba\x01\xa5\x01\n" +
	"\x1eget_art_upload_url.name.format\x12FArt resource name is required and must follow pattern 'users/*/arts/*'\x1a;this.size() > 0 && this.matches('^users/[^/]+/arts/[^/]+$')R\x04name\"}\n" +
	"\x17GetArtUploadUrlResponse\x12\x1d\n" +
	"\n" +
	"upload_url\x18\x01 \x01(\tR\tuploadUrl\x12C\n" +
	"\x0fexpiration_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x0eexpirationTime\"\x85\x02\n" +
	"\x1cConfirmArtImageUploadRequest\x12\xe4\x01\n" +
	"\x04name\x18\x01 \x01(\tB\xcf\x01\xe2A\x01\x02\xfaA\x15\n" +
	"\x13art.example.com/Art\xbaH\xaf\x01\xba\x01\xab\x01\n" +
	"$confirm_art_image_upload.name.format\x12FArt resource name is required and must follow pattern 'users/*/arts/*'\x1a;this.size() > 0 && this.matches('^users/[^/]+/arts/[^/]+$')R\x04name*\xa9\x01\n" +
	"\tArtStatus\x12\x1a\n" +
	"\x16ART_STATUS_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18ART_STATUS_PENDING_IMAGE\x10\x01\x12\x19\n" +
	"\x15ART_STATUS_PROCESSING\x10\x02\x12\x17\n" +
	"\x13ART_STATUS_COMPLETE\x10\x03\x12\x15\n" +
	"\x11ART_STATUS_FAILED\x10\x04\x12\x17\n" +
	"\x13ART_STATUS_ARCHIVED\x10\x05B$Z\"thread-art-generator/core/proto;pbb\x06proto3"

var (
	file_art_proto_rawDescOnce sync.Once
	file_art_proto_rawDescData []byte
)

func file_art_proto_rawDescGZIP() []byte {
	file_art_proto_rawDescOnce.Do(func() {
		file_art_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_art_proto_rawDesc), len(file_art_proto_rawDesc)))
	})
	return file_art_proto_rawDescData
}

var file_art_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_art_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_art_proto_goTypes = []any{
	(ArtStatus)(0),                       // 0: pb.ArtStatus
	(*Art)(nil),                          // 1: pb.Art
	(*CreateArtRequest)(nil),             // 2: pb.CreateArtRequest
	(*UpdateArtRequest)(nil),             // 3: pb.UpdateArtRequest
	(*GetArtRequest)(nil),                // 4: pb.GetArtRequest
	(*ListArtsRequest)(nil),              // 5: pb.ListArtsRequest
	(*ListArtsResponse)(nil),             // 6: pb.ListArtsResponse
	(*DeleteArtRequest)(nil),             // 7: pb.DeleteArtRequest
	(*GetArtUploadUrlRequest)(nil),       // 8: pb.GetArtUploadUrlRequest
	(*GetArtUploadUrlResponse)(nil),      // 9: pb.GetArtUploadUrlResponse
	(*ConfirmArtImageUploadRequest)(nil), // 10: pb.ConfirmArtImageUploadRequest
	(*timestamppb.Timestamp)(nil),        // 11: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),        // 12: google.protobuf.FieldMask
}
var file_art_proto_depIdxs = []int32{
	0,  // 0: pb.Art.status:type_name -> pb.ArtStatus
	11, // 1: pb.Art.create_time:type_name -> google.protobuf.Timestamp
	11, // 2: pb.Art.update_time:type_name -> google.protobuf.Timestamp
	1,  // 3: pb.CreateArtRequest.art:type_name -> pb.Art
	1,  // 4: pb.UpdateArtRequest.art:type_name -> pb.Art
	12, // 5: pb.UpdateArtRequest.update_mask:type_name -> google.protobuf.FieldMask
	1,  // 6: pb.ListArtsResponse.arts:type_name -> pb.Art
	11, // 7: pb.GetArtUploadUrlResponse.expiration_time:type_name -> google.protobuf.Timestamp
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_art_proto_init() }
func file_art_proto_init() {
	if File_art_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_art_proto_rawDesc), len(file_art_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_art_proto_goTypes,
		DependencyIndexes: file_art_proto_depIdxs,
		EnumInfos:         file_art_proto_enumTypes,
		MessageInfos:      file_art_proto_msgTypes,
	}.Build()
	File_art_proto = out.File
	file_art_proto_goTypes = nil
	file_art_proto_depIdxs = nil
}
