name: Build and Deploy

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  REGISTRY: us-central1-docker.pkg.dev
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-staging/providers/github-provider
          service_account: cicd-sa-staging@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGISTRY }}

      - name: Build and Push API Image
        run: |
          docker build -f Infra/Dockerfiles/Dockerfile-api \
            -t ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/api:${{ env.IMAGE_TAG }} \
            -t ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/api:latest .
          docker push ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/api:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/api:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -f Infra/Dockerfiles/Dockerfile-frontend \
            -t ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/frontend:${{ env.IMAGE_TAG }} \
            -t ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/frontend:latest .
          docker push ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/frontend:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/frontend:latest

      - name: Build and Push Worker Image
        run: |
          docker build -f Infra/Dockerfiles/Dockerfile-worker \
            -t ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/worker:${{ env.IMAGE_TAG }} \
            -t ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/worker:latest .
          docker push ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/worker:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/worker:latest

  migrate:
    name: Run Database Migrations
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-staging/providers/github-provider
          service_account: cicd-sa-staging@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Run Database Migrations
        run: |
          gcloud run jobs create migration-job-${{ github.run_id }} \
            --image=${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/api:${{ env.IMAGE_TAG }} \
            --service-account=migrator-sa-staging@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --region=us-central1 \
            --command=./build/migrations \
            --set-env-vars="POSTGRES_HOST=127.0.0.1,POSTGRES_PORT=5432" \
            --set-cloudsql-instances=${{ vars.GCP_PROJECT_ID }}:us-central1:thread-art-db-staging \
            --max-retries=0 \
            --wait
          
          gcloud run jobs execute migration-job-${{ github.run_id }} --region=us-central1 --wait
          
          # Clean up the job after execution
          gcloud run jobs delete migration-job-${{ github.run_id }} --region=us-central1 --quiet

  deploy:
    name: Deploy Services
    runs-on: ubuntu-latest
    needs: [build, migrate]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-staging/providers/github-provider
          service_account: cicd-sa-staging@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy API Service
        run: |
          gcloud run deploy thread-art-api-staging \
            --image=${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/api:${{ env.IMAGE_TAG }} \
            --region=us-central1 \
            --service-account=api-sa-staging@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --allow-unauthenticated \
            --port=9090 \
            --memory=1Gi \
            --cpu=1 \
            --min-instances=0 \
            --max-instances=10

      - name: Deploy Frontend Service
        run: |
          gcloud run deploy thread-art-frontend-staging \
            --image=${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/frontend:${{ env.IMAGE_TAG }} \
            --region=us-central1 \
            --service-account=client-sa-staging@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --allow-unauthenticated \
            --port=8080 \
            --memory=512Mi \
            --cpu=1 \
            --min-instances=0 \
            --max-instances=5

      - name: Deploy Worker Service
        run: |
          gcloud run deploy thread-art-worker-staging \
            --image=${{ env.REGISTRY }}/${{ vars.GCP_PROJECT_ID }}/thread-art/worker:${{ env.IMAGE_TAG }} \
            --region=us-central1 \
            --service-account=worker-sa-staging@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --no-allow-unauthenticated \
            --memory=2Gi \
            --cpu=2 \
            --min-instances=0 \
            --max-instances=3