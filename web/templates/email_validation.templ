package templates

import "github.com/Damione1/thread-art-generator/web/client"

templ EmailValidation(errorMessage string) {
	@EmailValidationWithData(NewEmailValidationFormData(client.ParseValidationError(errorMessage), ""))
}

// EmailValidationWithFormValues renders the email validation page with form values pre-populated
templ EmailValidationWithFormValues(errorMessage, email string) {
	@EmailValidationWithData(NewEmailValidationFormData(client.ParseValidationError(errorMessage), email))
}

templ EmailValidationWithData(data EmailValidationFormData) {
	@Layout("Validate Email", nil) {
		<div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
			<div class="sm:mx-auto sm:w-full sm:max-w-sm">
				<h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-white">
					Validate Your Email
				</h2>
				<p class="mt-2 text-center text-sm text-gray-400">
					Enter the validation code that was sent to your email
				</p>
			</div>
			<div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
				@FormErrors(data.Errors)
				<form class="space-y-6" action="/validate-email" method="POST">
					@InputFieldWithMapping("email", "email", "email", "Email address", "", data.Email, true, data.Errors, "email")
					@InputFieldWithMapping("number", "validationNumber", "validationNumber", "Validation Code", "", "", true, data.Errors, "validationNumber")
					@SubmitButton("Validate Email")
				</form>
				<p class="mt-10 text-center text-sm text-gray-400">
					Already validated?
					<a href="/login" class="font-semibold leading-6 text-indigo-400 hover:text-indigo-300">
						Sign in
					</a>
				</p>
			</div>
		</div>
	}
}
