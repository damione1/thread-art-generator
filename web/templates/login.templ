package templates

import "github.com/Damione1/thread-art-generator/web/client"

templ Login(errorMessage string) {
	@LoginWithData(NewLoginFormData(client.ParseValidationError(errorMessage), ""))
}

// LoginWithFormValues renders the login page with form values pre-populated
templ LoginWithFormValues(errorMessage, email string) {
	@LoginWithData(NewLoginFormData(client.ParseValidationError(errorMessage), email))
}

templ LoginWithData(data LoginFormData) {
	@Layout("Login", nil) {
		<div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">
			<div class="sm:mx-auto sm:w-full sm:max-w-sm">
				<h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-white">
					Sign in to your account
				</h2>
			</div>
			<div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
				@FormErrors(data.Errors)
				<form class="space-y-6" action="/login" method="POST" id="login-form">
					@InputFieldWithMapping("email", "email", "email", "Email address", "", data.Email, true, data.Errors, "email")
					@PasswordField("password", "password", "Password", "", true, data.Errors, true)
					@SubmitButton("Sign in")
				</form>
				<p class="mt-10 text-center text-sm text-gray-400">
					Not a member?
					<a href="/register" class="font-semibold leading-6 text-indigo-400 hover:text-indigo-300">
						Create an account
					</a>
				</p>
				<p class="mt-2 text-center text-sm text-gray-400">
					Need to validate your email?
					<a href="/validate-email" class="font-semibold leading-6 text-indigo-400 hover:text-indigo-300">
						Enter validation code
					</a>
				</p>
			</div>
		</div>
		<script>
			document.addEventListener('DOMContentLoaded', function() {
				const form = document.getElementById('login-form');

				form.addEventListener('submit', function(e) {
					// Let the form submit normally, but after redirect, fetch tokens
					if (window.authUtils) {
						// We'll do this async after the form processes
						setTimeout(function() {
							// After login, the cookies are set, so we can fetch them via API
							fetch('/api/auth/tokens', {
								method: 'POST',
								credentials: 'include' // Include cookies
							})
							.then(response => {
								if (response.ok) {
									return response.json();
								}
							})
							.then(data => {
								if (data) {
									// Store tokens in localStorage
									window.authUtils.storeTokens(
										data.access_token,
										data.refresh_token,
										data.access_token_expire_time
									);
									console.log('Auth tokens stored in localStorage');
								}
							})
							.catch(error => {
								console.error('Error fetching auth tokens:', error);
							});
						}, 1000); // Small delay to ensure cookies are set
					}
				});
			});
		</script>
	}
}
